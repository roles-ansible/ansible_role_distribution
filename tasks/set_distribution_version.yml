---
- name: "Check  distribution installed version"
  ansible.builtin.shell: "set -eo pipefail; {{ distribution__full_executable_path }} --version | cut -d' ' -f 3"
  args:
    executable: /bin/bash
  register: distribution__active_version
  changed_when: false
  failed_when: false

- name: "Determine 'latest' distribution version release"
  when: distribution__version == "latest"
  block:
    - name: "Get latest distribution release metadata"
      ansible.builtin.uri:
        url: "{{ distribution__releases_latest }}"
        return_content: true
      register: distribution__remote_metadata
      become: false
      when: not ansible_check_mode

    - name: "Fail if running in check mode without versions set."
      ansible.builtin.fail:
        msg: |
          "You are running this playbook in check mode:
          Please set the  distribution version with the variable 'distribution__version', because the URI module cannot detect the latest version in this mode."
      when: ansible_check_mode and (distribution__version == 'latest')

    - name: "Set fact latest distribution release"
      ansible.builtin.set_fact:
        distribution__remote_version: "{{ distribution__remote_metadata.json.tag_name[1:] }}"
      when: not ansible_check_mode

    - name: "Set distribution version target (latest)"
      ansible.builtin.set_fact:
        distribution__version_target: "{{ distribution__remote_version }}"
      when: not ansible_check_mode

- name: "Set distribution version target {{ distribution__version }}"
  ansible.builtin.set_fact:
    distribution__version_target: "{{ distribution__version }}"
  when: distribution__version != "latest"

- name: "Generate distribution download URL"
  ansible.builtin.set_fact:
    distribution__dl_url: "{{ distribution__git_repo }}/releases/download/v{{ distribution__version_target }}/registry_{{ distribution__version_target }}_linux_{{ distribution__arch }}.tar.gz"
